<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HEXO博客搭建相册</title>
    <url>/2019/02/10/HEXO%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%86%8C/</url>
    <content><![CDATA[<!--<img src="http://pmt8a42fu.bkt.clouddn.com/album.jpg" width="85%" height="85%">-->
<h2 id="前言">前言</h2>
<blockquote>
<p>本文主要介绍一些hexo博客搭建相册页面的具体过程，适配Next主题，简约又不失条理，一起试试吧~</p>
</blockquote>
<a id="more"></a>
<h2 id="1-安装fancybox功能">1. 安装fancybox功能</h2>
<p>fancybox功能主要用于实现相册图片的点击放大，能够形成相册效果。安装过程如下：</p>
<h3 id="1-1-修改配置文件">1.1 修改配置文件</h3>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fancybox. There is support for old version 2 and new version 3.</span></span><br><span class="line"><span class="comment"># Please, choose only any one variant, do not need to install both.</span></span><br><span class="line"><span class="comment"># For install 2.x: https://github.com/theme-next/theme-next-fancybox</span></span><br><span class="line"><span class="comment"># For install 3.x: https://github.com/theme-next/theme-next-fancybox3</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2-按照fancybox官网的安装步骤">1.2 按照fancybox官网的安装步骤</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-fancybox3 <span class="built_in">source</span>/lib/fancybox</span><br><span class="line">$ <span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/lib/fancybox</span><br><span class="line">$ git pull <span class="comment">#更新</span></span><br></pre></td></tr></table></figure>
<h2 id="2-图片处理">2. 图片处理</h2>
<p>本教程的相册图片是存放在coding.net的云端，也可以存在Github上，首先在本地服务器中建立名为album的文件夹，其中子文件夹/photos用来存放图片，目录树如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">album</span><br><span class="line">│</span><br><span class="line">└───min_photos</span><br><span class="line">│</span><br><span class="line">└───photos</span><br><span class="line">│   ├───pic1.jpg</span><br><span class="line">│   └───pic2.jpg</span><br><span class="line">│    </span><br><span class="line">└───ImageProcess.py</span><br><span class="line">│</span><br><span class="line">└───tool.py</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><a href="https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/blob/master/album/ImageProcess.py" target="_blank" rel="noopener">ImageProcess.py</a> ——对图片进行压缩编辑；</p>
</li>
<li>
<p>安装PIL库，只需执行：<code>pip install Pillow</code>；</p>
</li>
<li>
<p>在/hexo/themes/next/source/lib中新建一个文件夹album，修改<code>tool.py</code>中自己的json文件保存路径，此文件存储了图片的链接，名称和简介，其中<code>ensure_ascii=False</code>是防止文件名中文乱码；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with open(&quot;YourBolgPath&#x2F;themes&#x2F;next&#x2F;source&#x2F;lib&#x2F;album&#x2F;data.json&quot;,&quot;w&quot;) as fp:</span><br><span class="line">    json.dump(final_dict, fp, ensure_ascii&#x3D;False)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>为了保证相册按时间顺序排列，在函数<code>handle_photo</code>中进行修改；</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file_list = sorted(list_img_file(src_dir))</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>执行脚本<a href="https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/blob/master/album/tool.py" target="_blank" rel="noopener">tool.py</a>文件，生成<code>data.json</code>，并Git上传到coding.Net或Github；</p>
</li>
<li>
<p>注意图片命名方式需要按照特定方式即：2017-02-02_discriptionofyourpic.jpg，图片的格式支持常见格式，时间和描述之间存在下划线。</p>
</li>
</ul>
<h2 id="3-博客相册页面">3. 博客相册页面</h2>
<ul>
<li>
<p>在博客根目录下添加photo页面；</p>
<p><code>hexo n page photos</code></p>
</li>
<li>
<p>在themes/next/_config.yml配置文件中menu选项中添加photos:</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  相册: &#x2F;photos&#x2F;  || camera</span><br></pre></td></tr></table></figure>
<ul>
<li>在photos中的index.md添加如下代码</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 相册</span><br><span class="line">date: 2019-02-14 12:57:30</span><br><span class="line">type: photos</span><br><span class="line">fancybox: false</span><br><span class="line">comments: true</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../lib/album/ins.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../lib/album/photoswipe.css"</span>&gt;</span></span> </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../lib/album/default-skin/default-skin.css"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"instagram itemscope"</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://yourbolg.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"open-ins"</span>&gt;</span></span>图片正在加载中…<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line">  (function() &#123;</span><br><span class="line"><span class="code">    var loadScript = function(path) &#123;</span></span><br><span class="line"><span class="code">      var $script = document.createElement('script')</span></span><br><span class="line"><span class="code">      document.getElementsByTagName('body')[0].appendChild($script)</span></span><br><span class="line"><span class="code">      $script.setAttribute('src', path)</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    setTimeout(function() &#123;</span></span><br><span class="line"><span class="code">        loadScript('../lib/album/ins.js')</span></span><br><span class="line"><span class="code">    &#125;, 0)</span></span><br><span class="line">  &#125;)()</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>注意修改源路径为你自己博客的域名。</p>
<h2 id="4-js-CSS文件">4. js&amp;CSS文件</h2>
<ul>
<li>
<p>我们还需要添加css文件和js文件，具体文件见<a href="https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/tree/master/blog/themes/next/source/lib/album" target="_blank" rel="noopener">我的album</a>；</p>
</li>
<li>
<p>注意/assets文件夹必须含有<code>empty.png</code>，否则图片缩略图可能不显示；</p>
</li>
<li>
<p>CSS文件拷贝到前面创建的<code>/themes/next/source/lib/album</code>中；</p>
</li>
<li>
<p>然后再将<a href="https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/blob/master/blog/themes/next/source/js/src/photoswipe-ui-default.min.js" target="_blank" rel="noopener">photoswipe-ui-default.min.js</a>，<a href="https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/blob/master/blog/themes/next/source/js/src/photoswipe.min.js" target="_blank" rel="noopener">photoswipe.min.js</a>两个文件添加到themes/next/source/js/src中；</p>
</li>
<li>
<p>对ins.js文件进行一个简单的修正，将里面大约在121和122行左右的连接修改为你的图片连接地址（注意必须是图片点击放大的源文件地址，否则显示会出错，本教程coding,net的地址）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//var minSrc = 'https://raw.githubusercontent.com/yourgithub/Blog_Album/master/min_photos/' + data.link[i];</span></span><br><span class="line"><span class="keyword">var</span> minSrc = <span class="string">'https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/raw/master/album/min_photos/'</span> + data.link[i];</span><br><span class="line"><span class="comment">//var src = 'https://raw.githubusercontent.com/yourgithub/Blog_Album/master/photos/' + data.link[i];</span></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">'https://dev.tencent.com/u/cherryzzangg/p/Hexo-Workspace/git/raw/master/album/photos/'</span> + data.link[i];</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-其他配置">5. 其他配置</h2>
<ul>
<li>引用配置在<code>next/layout/_layout.swig</code>的头部前添加对js文件的引用如下：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="&#123;&#123; url_for(theme.js) &#125;&#125;/</span>src/photoswipe-ui-<span class="keyword">default</span>.min.js?v=&#123;&#123; theme.version &#125;&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>在body中添加如下的内容：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.type === <span class="string">"photos"</span> %&#125;</span><br><span class="line">  &lt;!-- Root element <span class="keyword">of</span> PhotoSwipe. Must have <span class="class"><span class="keyword">class</span> <span class="title">pswp</span>. --&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">div</span> <span class="title">class</span></span>=<span class="string">"pswp"</span> tabindex=<span class="string">"-1"</span> role=<span class="string">"dialog"</span> aria-hidden=<span class="string">"true"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__bg"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="pswp__scroll-wrap"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="pswp__container"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__item"&gt;&lt;/</span>div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__item"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__item"&gt;&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="pswp__ui pswp__ui--hidden"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__top-bar"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;div class="pswp__counter"&gt;&lt;/</span>div&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__button pswp__button--close"</span> title=<span class="string">"Close (Esc)"</span>&gt;&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;button class="pswp__button pswp__button--share" title="Share"&gt;&lt;/</span>button&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__button pswp__button--fs"</span> title=<span class="string">"Toggle fullscreen"</span>&gt;&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;button class="pswp__button pswp__button--zoom" title="Zoom in/</span>out<span class="string">"&gt;&lt;/button&gt;</span></span><br><span class="line"><span class="string">                &lt;!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR --&gt;</span></span><br><span class="line"><span class="string">                &lt;!-- element will get class pswp__preloader--active when preloader is running --&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__preloader<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="</span>pswp__preloader__icn<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                      &lt;div class="</span>pswp__preloader__cut<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="</span>pswp__preloader__donut<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                      &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>pswp__share-modal pswp__share-modal--hidden pswp__single-tap<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__share-tooltip<span class="string">"&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;button class="</span>pswp__button pswp__button--arrow--left<span class="string">" title="</span>Previous (arrow left)<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;button class="</span>pswp__button pswp__button--arrow--right<span class="string">" title="</span>Next (arrow right)<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>pswp__caption<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__caption__center<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>在<code>/themes/next/layout/_scripts/pages/post-details.swig</code>中添加：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" src="</span>&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe-ui-<span class="keyword">default</span>.min.js?v=&#123;&#123; theme.version &#125;&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>修改相册时间轴年份CSS样式</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.instagram</span> <span class="selector-class">.year</span> &#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">	color: #555; //修改成自己的配色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>打造酷炫桌面——win10秒变mac</title>
    <url>/2019/02/10/Win10%E7%A7%92%E5%8F%98Mac%E6%89%93%E9%80%A0%E9%85%B7%E7%82%AB%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[<img src="https://i.loli.net/2019/02/10/5c5fbd50b5a66.jpg" width="85%" height="85%">
<h2 id="前言">前言</h2>
<p>假期闲来无事，模仿B站大佬<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>动手来了个桌面改造，基本是“雨滴桌面+软媒桌面”的架构，外加一张赛博朋克风的壁纸，大功告成！实用性目前感觉还行，操作还算习惯，对于强迫症患者来说很友好了。摆一张首页截图~</p>
<a id="more"></a>
<h2 id="1-Mac风格dock栏">1. Mac风格dock栏</h2>
<ul>
<li>
<p>软媒魔方自带的桌面插件，这里使用的是一款纯净版插件，见链接<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>中<code>mydesk.exe</code>文件；</p>
</li>
<li>
<p>支持三种样式和自定义图标，还可以添加文件夹，其中软件的图标库也来自上述链接；</p>
</li>
<li>
<p>在窗口打开状态，dock栏支持快捷键唤醒，这个我觉得很方便，在设置中可以选择快捷键；</p>
</li>
<li>
<p>设定双击隐藏桌面图标，看起来清爽不少哈哈~</p>
</li>
<li>
<p>我选择将任务栏靠左，并在桌面模式自动隐藏，既不影响windows正常使用，还可以更加整洁，否则底部两排任务栏很心累捏~</p>
</li>
</ul>
<h2 id="2-雨滴桌面">2. 雨滴桌面</h2>
<ul>
<li>
<p>雨滴官网<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>下载软件；</p>
</li>
<li>
<p>这里添加的一款时钟皮肤插件<code>Authentic</code>，直接拖拽到皮肤文件夹中即可；</p>
</li>
</ul>
<h2 id="3-其他">3. 其他</h2>
<p>另外推荐三款简洁软件：</p>
<ul>
<li>
<p>火绒安全<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</li>
<li>
<p>uninstall tool破解版<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</li>
<li>
<p>pandownload<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
</li>
</ul>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.bilibili.com/video/av40972990/" target="_blank" rel="noopener">比Mac端更美的dock栏，你还不入手吗</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>链接：<a href="https://pan.baidu.com/s/1-AAbuMbAeLu3XiemN7nvsQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1-AAbuMbAeLu3XiemN7nvsQ</a>  提取码：aa4x <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.rainmeter.net/" target="_blank" rel="noopener">https://www.rainmeter.net/</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://www.huorong.cn/" target="_blank" rel="noopener">https://www.huorong.cn/</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p>链接：<a href="https://pan.baidu.com/s/17lon0xYudkAdyV9HLN2MvQ" target="_blank" rel="noopener">https://pan.baidu.com/s/17lon0xYudkAdyV9HLN2MvQ</a>  提取码：hztw <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="http://pandownload.com/" target="_blank" rel="noopener">http://pandownload.com/</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Windows美化</category>
      </categories>
      <tags>
        <tag>桌面美化</tag>
      </tags>
  </entry>
  <entry>
    <title>imbalanced data不平衡样本的问题</title>
    <url>/2018/08/20/imbalanced%20data%E4%B8%8D%E5%B9%B3%E8%A1%A1%E6%A0%B7%E6%9C%AC%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<img src="https://i.loli.net/2018/08/20/5b7a7d18e275c.jpg" width="85%" height="85%">
<h2 id="前言">前言</h2>
<blockquote>
<p>本文介绍了有关数据不均衡分布的问题，包括解决该类问题的主要方法。</p>
</blockquote>
<a id="more"></a>
<h2 id="1-动机（motivation）">1. 动机（motivation）</h2>
<p>机器学习中分类问题存在许多数据样本不均衡的问题，特征的分类平面会向少数类方向偏移，不利于机器学习任务。因此，我们需要调整数据分布形成平衡的数据集，再进行特征学习。</p>
<h2 id="2-产生原因">2. 产生原因</h2>
<ul>
<li>内部：the nature of the dataspace，数据本身存在的分布不均衡（医学上的问题），例如患病率导致在人群中的分布不均衡</li>
<li>外部：采样的方式（比例不同）</li>
<li>相对关系：相对majority不平衡</li>
<li>绝对少数</li>
<li>类间和类内的不平衡：Between-class and inter-class imbalance</li>
<li>具有相同label的小簇</li>
</ul>
<h2 id="3-采样的问题">3. 采样的问题</h2>
<h3 id="3-1-降采样和过采样">3.1 降采样和过采样</h3>
<ul>
<li>随机降采样（Random Under-sampling）</li>
</ul>
<p>减少大多数类别的数量（Cut the majority），有可能会导致丢失大类内重要的数据。</p>
<ul>
<li>随机过采样（Random Oversampling）：扩展小类别，就是通过有放回的抽样，不断的从少数类的抽取样本，数据重复的方式可能会导致过拟合现象。</li>
</ul>
<h3 id="3-2-bagging-降采样">3.2 bagging+降采样</h3>
<p><img src="https://i.loli.net/2018/08/20/5b7a7cb1cabc7.jpg" alt="boostrap.jpg"></p>
<ul>
<li>
<p>从大类中采样进行bagging，降采样后与少数具有相同的尺寸大小。</p>
</li>
<li>
<p>训练多个平衡的分类器，形成ensemble网络。</p>
</li>
<li>
<p>融合所有平衡的分类器的输出。</p>
</li>
</ul>
<h3 id="3-3-EasyEnsemble（AdaBoost-bagging）">3.3 EasyEnsemble（AdaBoost+bagging）</h3>
<p>（X.Y. Liu, J. Wu, and Z.H. Zhou, ICDM, 2006）</p>
<p>类似上述过程，主要差异在训练一系列AdaBoost的Ensembles网络</p>
<h3 id="3-4-过采样（SMOTE）">3.4 过采样（SMOTE）</h3>
<p>Synthetic minority oversampling technique (SMOTE)</p>
<ul>
<li>
<p>计算点p在S中的k个最近邻。</p>
</li>
<li>
<p>有放回地随机抽取R≤k个邻居。</p>
</li>
<li>
<p>对这R个点，每一个点与点p可以组成一条直线，然后在这条直线上随机取一个点，就产生了一个新的样本，一共可以这样做从而产生R个新的点。</p>
</li>
<li>
<p>将这些新的点加入S中连线上插值产生数据。</p>
</li>
</ul>
<p><img src="https://i.loli.net/2018/08/20/5b7a7d62dfc4c.jpg" alt="SMOTE.jpg"></p>
<ul>
<li>缺点：
<ul>
<li>过度生成数据，盲目的扩展少数类而不去考虑大类；</li>
<li>少数类可能非常稀疏化，导致类别的混淆。</li>
</ul>
</li>
</ul>
<h3 id="3-5-Borderline-SMOTE">3.5 Borderline-SMOTE</h3>
<ul>
<li>
<p>计算点p在训练集T上的m个最近邻。我们称这个集合为Mp然后设 m’= |Mp ∩ L| (表示点p的最近邻中属于L的数量)；</p>
</li>
<li>
<p>If m’= m, p 是一个噪声,不做任何操作；</p>
</li>
<li>
<p>If 0 ≤m’≤m/2, 则说明p很安全，不做任何操作；</p>
</li>
<li>
<p>If m/2 ≤ m’≤ m,那么点p就很危险了，我们需要在这个点附近生成一些新的少数类点，所以我们把它加入到DANGER中。最后，对于每个在DANGER中的点d，使用SMOTE算法生成新的样本。</p>
</li>
</ul>
<p><img src="https://i.loli.net/2018/08/20/5b7a7fa4a59d6.jpg" alt="border_SMOTE.jpg"></p>
<h3 id="3-6-SMOTE-Tomek">3.6 SMOTE+Tomek</h3>
<p>Upsampling+Downsampling(数据清洗)</p>
<p><img src="https://i.loli.net/2018/08/20/5b7a81a29bc43.jpg" alt="SMOTE-Tomek.jpg"></p>
<h3 id="3-7-缺点">3.7 缺点</h3>
<ul>
<li>
<p>需要好的映射（embedding）</p>
</li>
<li>
<p>不能解决难例问题</p>
</li>
<li>
<p>class weight:1个点当0.5个点</p>
</li>
<li>
<p>新生成的点对数据分类性能并无特别提升</p>
</li>
<li>
<p>新生成有可能混淆原始分布</p>
</li>
</ul>
<h2 id="4-Cost-sensitive-Methods">4. Cost-sensitive Methods</h2>
<p>基于损失函数敏感的方法</p>
<ul>
<li>
<p>类别权重调整</p>
</li>
<li>
<p>Focal Loss/hard example mining</p>
</li>
<li>
<p>Class-dependent layer: 输出层和损失层之间添加的一层</p>
</li>
</ul>
<p><img src="https://i.loli.net/2018/08/20/5b7a83a74cfee.jpg" alt="class-balanced layer.jpg"></p>
<ul>
<li>
<p>Rank-based Loss(损失排序)</p>
</li>
<li>
<p>instance-level re-weighting</p>
</li>
</ul>
<h2 id="5-metric-learning-methods">5.metric learning methods</h2>
<ul>
<li>triplet &amp; quintuplet(五元组构成三个loss)</li>
</ul>
<p><img src="https://i.loli.net/2018/08/20/5b7a84d17ed06.jpg" alt="triplet.jpg"></p>
<p><img src="https://i.loli.net/2018/08/20/5b7a84a733cef.jpg" alt="quintuplet.jpg"></p>
<h2 id="6-深度学习方法">6.深度学习方法</h2>
<p>学习embedding和分类器</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>样本分布</tag>
      </tags>
  </entry>
  <entry>
    <title>医疗AI——深度学习算法方向offer面试总结</title>
    <url>/2018/04/12/%E5%8C%BB%E7%96%97AI%E2%80%94%E2%80%94%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%96%B9%E5%90%91offer%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>记录实习面试经历，有关深度学习在医学图像处理方面的。</p>
</blockquote>
<a id="more"></a>
<h2 id="电话一面">电话一面</h2>
<ol>
<li>
<p>看了项目，为什么使用U-net网络？好处是什么？与FCN网络相比，有什么不同？</p>
<p>回答：U-net的跳跃连接式结构，融合全局和局部信息，多尺度信息；针对医学图像处理（FCN待补充）</p>
</li>
<li>
<p>项目中为什么使用空洞卷积？好处是？</p>
<p>回答：扩大感受野，更好的结合多尺度信息；减少参数，降低训练时间</p>
</li>
<li>
<p>训练中出现过拟合现象的原因？解决的方法？</p>
<p>原因：</p>
<ul>
<li>数据集不够</li>
<li>参数太多，模型过于复杂，容易过拟合</li>
<li>权值学习迭代次数足够多，拟合了训练数据中的噪声和训练样例中没有代表性的特征</li>
</ul>
<p>解决办法：数据扩增正则化和dropout等</p>
<p>总结：</p>
<ul>
<li>交叉验证法</li>
<li>减少特征</li>
<li>正则化</li>
<li>权值衰减</li>
<li>验证数据</li>
</ul>
</li>
<li>
<p>分类相关框架：VGGNet的卷积核尺寸是多少？max pooling使用的尺寸？为什么使用$3\times3$的尺寸？</p>
<p>回答：用两个$3\times3$的尺寸卷积核可以相当一个$5\times5$卷积核，并且能够大量减少参数。</p>
<blockquote>
<p>面试官进一步让我计算一下$5\times5$卷积核卷积，输入时RGB三通道图像，输出channel为2，计算一共需要多少参数。其中，$25\times3\times2=150$</p>
</blockquote>
</li>
<li>
<p>是否了解RESNet的residual block?(不太了解😢)</p>
</li>
<li>
<p>是否了解检测的框架？Faster-RCNN与yolo相比哪个更快？两者区别？one-stage与two-stage检测？（答得不太好）</p>
</li>
<li>
<p>dropout具体的实现原理？随机的还是固定？对于训练过程和测试过程如何控制dropout？</p>
</li>
<li>
<p>dropout是针对sample还是batch?</p>
<p>由于我之前回答dropout原理上面类似于ensemble learning，面试官提示我，可以联系起来，应该是在sample上面dropout?</p>
</li>
<li>
<p>项目中使用的数据库哪些？如何获取的标签？评价指标用的哪些？具体指明？了解DICE吗？</p>
<p>回答：准确性，特异性，敏感性，AUC(还好做了笔记，要不公式真的会忘啊)</p>
</li>
<li>
<p>是否了解BN层？（没太使用）</p>
</li>
<li>
<p>项目中的测试结果有多少？如何牺牲一部分特异性来提高敏感性？医学上的意义更大？</p>
<p>面试官提示我，可以考虑血管像素在图像总像素的比例，进行正负样本的均衡化。</p>
</li>
</ol>
<h2 id="现场二面">现场二面</h2>
<p>首先问了项目细节（主要是图像分割）</p>
<p>有关像素分类的图像分割方法与传统块的分割有什么区别？像素分类的方法的优点？（减少复杂度，块滑动的参数过大）</p>
<h3 id="有关分割网络框架">有关分割网络框架</h3>
<ol>
<li>了解其他的分割网络吗？</li>
<li>FCN网络为什么用全卷积层代替全连接层？</li>
<li>SegNet的结构原理？去掉跳跃连接为什么会效果好？适用范围？</li>
<li>金字塔分割网络（FPN)？</li>
<li>Deeplab的改进？Deeplab V3结构原理？Deeplab V3 plus改进？（有关加速？Xception等，没答上来）</li>
</ol>
<h3 id="有关分类网络框架">有关分类网络框架</h3>
<ol>
<li>
<p>了解常见的分类网络吗？</p>
</li>
<li>
<p>Alexnet和VGGnet的区别？（主要答了卷积核尺寸和池化）</p>
</li>
<li>
<p>了解Inception网络吗？（待学习）</p>
</li>
<li>
<p>了解Densenet网络吗？（没会）</p>
</li>
<li>
<p>了解Resnet网络吗？残差块的原理解释？为什么残差块可以解决梯度消失的问题？</p>
<p>经过面试官提示，从反向传播角度考虑。回答，$F(x)+x$ 求导以后是$g(x)+1$ ，常数项的存在使得梯度不为0。</p>
</li>
<li>
<p>了解ResNext网络吗？（不了解）</p>
</li>
<li>
<p>$1\times 1$ 的卷积核有什么作用？</p>
<p>回答：一方面有降维的作用（其实还有升维作用，降低输入和输出的参数）；卷积相当于线性变换，不改变感受野，依靠RELU激活函数进行非线性化。</p>
</li>
<li>
<p>了解几种常见池化方法？</p>
</li>
<li>
<p>global average pooling的原理？（其实就是对整个feature map取平均，映射到一个特征点）</p>
</li>
</ol>
<h2 id="有关检测的框架">有关检测的框架</h2>
<ol>
<li>
<p>了解常见的检测网络吗？</p>
</li>
<li>
<p>faster-rcnn算法原理？two-stage和one-stage？rpn网络？Roi pooling?用到的损失函数？</p>
<p>回答：分类损失和框的回归损失。（分类用到交叉熵损失，回归是预测框与真实框的重叠面积）</p>
</li>
<li>
<p>损失函数有哪些？（平方差，指数，交叉熵）交叉熵损失函数的公式？针对多样本多像素？（对每个像素求损失，加和再取平均）</p>
</li>
<li>
<p>YOLO和SSD算法了解吗？为什么速度快？</p>
</li>
</ol>
<h2 id="Python相关">Python相关</h2>
<ol>
<li>遍历一个列表的元素？</li>
<li>list和元组哪个可变？（list的append)</li>
<li>输出列表序号索引内容？（提示：enumerate()函数）</li>
<li>numpy，pandas，scikit-image，opencv里面处理图像的函数？</li>
</ol>
<p>基本上总结这些了，小公司的offer也不好拿啊😢</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>面经</tag>
        <tag>医学影像</tag>
      </tags>
  </entry>
  <entry>
    <title>那些年看过的书/电影</title>
    <url>/2018/03/16/%E9%82%A3%E4%BA%9B%E5%B9%B4%E7%9C%8B%E8%BF%87%E7%9A%84%E4%B9%A6%E5%92%8C%E7%94%B5%E5%BD%B1/</url>
    <content><![CDATA[<img src="https://i.loli.net/2018/12/10/5c0e8d11f35de.jpg" width="85%" height="85%">
<blockquote class="blockquote-center">
            <p>In everything ending,there is a new beginning.</p>

          </blockquote>
<a id="more"></a>
<h2 id="2018">2018</h2>
<h3 id="年终">年终</h3>
<div class="note primary">
  <i class="fa fa-book">歌舞伎町案内人[李小牧]</i> 
  <i class="fa fa-book">人间失格[太宰治]</i> 
  <i class="fa fa-book">如何阅读一本书</i> 
  <i class="fa fa-tv">鬼入侵[美剧]</i>
  <i class="fa fa-tv">发现女巫[英剧]</i>
  <i class="fa fa-tv">使女的故事第二季[美剧]</i>
  <i class="fa fa-tv">中学圣日记[日剧]</i>
  <i class="fa fa-tv">皇后的品格[韩剧]</i>
  <i class="fa fa-tv">梅尔罗斯[美剧]</i>
  <i class="fa fa-tv">延禧攻略[剧]</i>
  <i class="fa fa-tv">生门[纪录片]</i>
  <i class="fa fa-tv">新西游记第五季/第六季[综艺]</i>
  <i class="fa fa-tv">奇葩说第五季[综艺]</i>
  <i class="fa fa-tv">奇遇人生[综艺]</i>
  <i class="fa fa-tv">心动的信号[综艺]</i>
  <i class="fa fa-film">我不是药神[影]</i>
  <i class="fa fa-film">邪不压正[影]</i>
  <i class="fa fa-film">找到你[影]</i>
  <i class="fa fa-film">网络谜踪[影]</i>
  <i class="fa fa-film">燃烧[影]</i>
  <i class="fa fa-film">暴裂无声[影]</i>
  <i class="fa fa-film">江湖儿女[影]</i>
  <i class="fa fa-film">嗝嗝老师[影]</i>
  <i class="fa fa-film">头号玩家[影]</i>
  <i class="fa fa-film">蚁人2：黄蜂女现身[影]</i>
  <i class="fa fa-film">毒液[影]</i>
  <i class="fa fa-film">复仇者联盟3：无限战争[影]</i>
  <i class="fa fa-film">湮灭[影]</i>
  <i class="fa fa-tv">我的黑历史误答笔记[独幕剧]</i>
  <i class="fa fa-tv">偶像练习生/创造101[综艺]</i>
  <i class="fa fa-tv">中国新说唱[综艺]</i>
</div>
<ul>
<li>歌舞伎町案内人[李小牧]</li>
</ul>
<div class="note default"><p>鱼龙混杂中谋生机，圆滑处世又不失个人色彩。自传体讲述传奇人生，故事会一般的阅读体验。</p></div>
<ul>
<li>人间失格[太宰治]</li>
</ul>
<div class="note default"><p>典型日式内心独白式的自传小说，看似不知所云，又真切地被那些孤独彷徨绝望的情绪引起共鸣，可谓丧到极致了。借用李诞的话，开心点，人间不值得。</p></div>
<ul>
<li>
<p>如何阅读一本书</p>
</li>
<li>
<p>鬼入侵[美剧]</p>
</li>
</ul>
<div class="note default"><p>招魂式鬼故事的外核，包裹着关乎亲情信任责任的故事，看鬼片哭的稀里糊涂真可谓破天荒。从不同视角多支线叙事，再将所有时间点合并，光是超长长镜头和绝妙的时空剪辑就值得安利了。</p></div>
<ul>
<li>发现女巫[英剧]</li>
</ul>
<div class="note default"><p>已入坑，被马修大叔的肉体和颜值勾到，女主很美，伦敦风景美如画，吸血鬼和女巫的故事没办法拒绝，期待第二季。</p></div>
<ul>
<li>使女的故事第二季[美剧]</li>
</ul>
<div class="note default"><p>神剧依旧，剧情反转猜不到，尼克小哥哥求不挂，废旧报社场景A爆。</p></div>
<ul>
<li>中学圣日记[日剧]</li>
</ul>
<div class="note default"><p>配乐一流好听，剧情没三观但就是好看，纯爱日剧既视感，男主真的是青葱美少年。</p></div>
<ul>
<li>
<p>皇后的品格[韩剧]：狗血又好看</p>
</li>
<li>
<p>梅尔罗斯[美剧]</p>
</li>
</ul>
<div class="note default"><p>别名浮生如梦，本尼演技全程爆发，迷幻药、童年阴影、灵魂救赎与堕落之路。</p></div>
<ul>
<li>
<p>延禧攻略[剧]：雪落下的声音，是两厢情愿。</p>
</li>
<li>
<p>生门[纪录片]</p>
</li>
</ul>
<div class="note default"><p>全程泪眼婆娑，一来更觉母亲之不易，二来叹没有钱少生孩子，三来日常恐婚恐育。生门亦是死门，生死之间，人世百态。</p></div>
<ul>
<li>新西游记第五季/第六季[综艺]</li>
</ul>
<div class="note default"><p>承包我一年的笑点，罗pd出手就是不一样，有时间刷完。</p></div>
<ul>
<li>奇葩说第五季[综艺]</li>
</ul>
<div class="note default"><p>这一季有惊喜也有失望，惊喜的是认识了薛兆丰、詹青云、熊浩这些有趣的灵魂，阿詹辩论的气质简直令人高潮，陈铭依然全能手360度无敌，冠军实至名归。另外为马薇薇黄执中和邱晨的故事触动，愿我们都能笑着面对生活的无情。</p></div>
<ul>
<li>奇遇人生[综艺]</li>
</ul>
<div class="note default"><p>纪录片质感的综艺，摄影出身的导演保证了画面的绝美，每期的主题都很有深意，爱上春夏的性格，还有窦骁的笑容。</p></div>
<ul>
<li>心动的信号[综艺]</li>
</ul>
<div class="note default"><p>买版权综艺，意外惊喜，小姐姐很美，少女心爆棚的约会，剧情和现实的差太大。</p></div>
<ul>
<li>我不是药神[影]</li>
</ul>
<div class="note default"><p>年度最佳影片，金马奖作品，章宇新生代演技派，中国版的“达拉斯买家俱乐部”，反映现实题材的商业片，有点韩国电影的叙述风格。</p></div>
<ul>
<li>邪不压正[影]</li>
</ul>
<div class="note default"><p>姜文个人风格极强的电影，黑色幽默中带点荒诞，大的历史背景讲述个人成长，时代隐喻暗含其中。</p></div>
<ul>
<li>找到你[影]</li>
</ul>
<div class="note default"><p>现实题材关注女性与家庭的影片，剧情中规中矩。</p></div>
<ul>
<li>网络谜踪[影]</li>
</ul>
<div class="note default"><p>今年最具特点的悬疑片了，全程利用社交网络串联，剧情也紧凑引入深思。每个人在社交网络里都有一张面具，躲在面具背后的只是渴求理解和温暖的灵魂。</p></div>
<ul>
<li>燃烧[影]</li>
</ul>
<div class="note default"><p>韩国悬疑气氛片，剧情偏意识流，裸体跳舞场景很美，男女主暧昧张力够味道。低层小人物的无奈和凄凉，内心的虚无只能通过燃烧自己尽情宣泄，犹如在非洲的夕阳中肆意舞蹈。</p></div>
<ul>
<li>暴裂无声[影]</li>
</ul>
<div class="note default"><p>独立电影佳作，带着野蛮和粗砺的质感，欧亨利式的结尾，令人脊背发凉。</p></div>
<ul>
<li>江湖儿女[影]</li>
</ul>
<div class="note default"><p>第一次看科长电影，前半部分黑帮节奏明快，后面时间跨度很大略显拖沓，剧情有些弱，想要表达的主题很宏大，结尾确实不好理解。</p></div>
<ul>
<li>
<p>嗝嗝老师[影]：印度宝莱坞式死亡诗社+少数群体关怀</p>
</li>
<li>
<p>头号玩家[影]：身处3D游戏的质感，各种游戏梗，看完直呼过瘾。</p>
</li>
<li>
<p>蚁人2：黄蜂女现身[影]</p>
</li>
<li>
<p>毒液[影]：最可爱的反派漫威角色了，剧情无脑，特效够爽就行。</p>
</li>
<li>
<p>复仇者联盟3：无限战争[影]：最好看的漫威系列，灭霸一个响指死一半。</p>
</li>
<li>
<p>湮灭[影]：科幻片里面的艺术片，小说预定。</p>
</li>
<li>
<p>我的黑历史误答笔记[独幕剧]：轻松好看</p>
</li>
<li>
<p>偶像练习生/创造101[综艺]：粉丝经济下的全民狂欢</p>
</li>
<li>
<p>中国新说唱[综艺]：真的没第一季好看</p>
</li>
</ul>
<h3 id="八月">八月</h3>
<ul>
<li>
<p>媚者无疆[剧]</p>
<blockquote>
<p>铺陈纸笔，情字里写满你。 ——《一生等你》</p>
</blockquote>
</li>
</ul>
<h3 id="二月">二月</h3>
<ul>
<li>
<p>长夜难明 [紫金陈]</p>
<blockquote>
<p>评语：权谋之间，人性是否经得住考验？弱者无力，赤子之心被抹黑，真相不白，长夜难明。</p>
</blockquote>
</li>
</ul>
<h2 id="2017">2017</h2>
<h3 id="十二月">十二月</h3>
<ul>
<li>
<p>房思琪的初恋乐园</p>
<blockquote>
<p>评语：无法想象这是一部自传体式的小说，全程用诗意化的文字，娓娓道来那些令人愤怒的事实。那样美的文字，那般美的少女。将美好彻底撕碎的悲剧。</p>
</blockquote>
</li>
<li>
<p>三块广告牌</p>
</li>
<li>
<p>水形物语</p>
</li>
</ul>
<h3 id="十一月">十一月</h3>
<ul>
<li>
<p>伯德小姐</p>
</li>
<li>
<p>请以你的名字呼唤我</p>
</li>
<li>
<p>与神同行</p>
</li>
</ul>
<h3 id="三月">三月</h3>
<ul>
<li>Unnatural [日]</li>
</ul>
]]></content>
      <categories>
        <category>文艺</category>
      </categories>
      <tags>
        <tag>书籍</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>Tensorlow配置Keras记录</title>
    <url>/2018/03/10/tensorlow%E9%85%8D%E7%BD%AEkeras%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>Keras是基于Theano的一个深度学习框架，它的设计参考了Torch，用Python语言编写，是一个高度模块化的神经网络库，支持GPU和CPU。使用文档在：<a href="http://keras.io/" target="_blank" rel="noopener">http://keras.io/</a> ，可以支持Tensorflow框架。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装Tensorflow">安装Tensorflow</h2>
<ul>
<li>首先安装Anaconda环境</li>
<li>为Tensorflow创建python虚拟环境：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n tensorflow Python=2.7 # 此处用到的python版本是2.7</span><br><span class="line">source activate tensorflow</span><br></pre></td></tr></table></figure>
<ul>
<li>安装Tensorflow：
<ul>
<li>在线安装：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.0.0-cp27-none-linux_x86_64.whl</span><br><span class="line">pip install --ignore-installed --upgrade $TF_BINARY_URL</span><br></pre></td></tr></table></figure>
<ul>
<li>离线安装（推荐）：<br>
国内Tensorflow镜像使用清华大学镜像站: <a href="https://mirrors.tuna.tsinghua.edu.cn/tensorflow/linux/" target="_blank" rel="noopener">Tensorflow安装包下载链接</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ../安装包所在目录</span><br><span class="line">pip install --ignore-installed --upgrade tensorflow_gpu-1.2.0-cp27-none-linux_x86_64.whl  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 此处安装的是适用GPU的1.2版本</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="安装keras">安装keras:</h2>
<ul>
<li>安装依赖项：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install graphviz</span><br><span class="line">source avtivate tensorflow</span><br><span class="line">pip install keras</span><br><span class="line">conda install graphviz</span><br><span class="line">conda install pydot</span><br><span class="line">conda install -c menpo opencv3</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>tensorflow</tag>
        <tag>keras</tag>
      </tags>
  </entry>
  <entry>
    <title>血管分割的方法与效果总结</title>
    <url>/2018/01/06/%E8%A1%80%E7%AE%A1%E5%88%86%E5%89%B2%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8E%E6%95%88%E6%9E%9C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<p>卷积神经网络在医学图像分割上有着广泛的应用，针对视网膜眼底图像的分割成为研究的热门领域。</p>
<a id="more"></a>
<h2 id="模型介绍">模型介绍</h2>
<h3 id="ensemble-learning">ensemble learning</h3>
<p>12个模型取平均</p>
<p>网络结构如下图：<br>
<img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/ensemble_learning.jpg" alt="网络结构"><br>
<em>“Ensemble of Deep Convolutional Neural Networks for Learning to Detect Retinal Vessels in Fundus Images”</em></p>
<p>平均准确率： <strong>0.9470</strong></p>
<p><strong>组会PPT展示：<a href="https://www.jianguoyun.com/p/DadtaT0Q857ZBhja4D8" target="_blank" rel="noopener">基于卷积神经网络的光学眼底图像分割研究.pdf</a></strong></p>
<h3 id="基于U-net的方法">基于U-net的方法</h3>
<ul>
<li>
<p>原始的U-net方法：</p>
<p>利用对称的编码器——解码器结构</p>
<p>解码部分采用反卷积的方式</p>
<p>padding采用valid无零填充模式，即多余的剔除</p>
<p>特征层个数分别为：64-128-256-512-1024</p>
<p>参考链接：<a href="https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/" target="_blank" rel="noopener">U-Net: Convolutional Networks for Biomedical Image Segmentation</a></p>
</li>
<li>
<p>改进的方法1：</p>
<p>解码部分采用反卷积方式Deconv2d()，padding=same有零填充形式</p>
<p>特征层：64-128-256-512-1024</p>
<p><img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/%E5%9F%BA%E4%BA%8EU-net%E8%84%91%E8%82%BF%E7%98%A4%E5%88%86%E5%89%B2%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84.jpg" alt="基于U-net脑肿瘤分割网络结构"></p>
<p><em>“Automatic Brain Tumor Detection and Segmentation Using U-Net Based Fully Convolutional Networks”</em></p>
<p>github代码实现参考链接：<a href="https://github.com/zsdonghao/u-net-brain-tumor" target="_blank" rel="noopener">U-Net Brain Tumor Segmentation</a></p>
</li>
<li>
<p>改进的方法2：</p>
<p>解码过程采用上采样操作UpSampling2dLayer()，扩大分辨率</p>
<p>特征层个数：32-64-256-512</p>
<p>参考链接：<a href="https://github.com/jocicmarko/ultrasound-nerve-segmentation" target="_blank" rel="noopener">ultrasound-nerve-segmentation</a></p>
</li>
</ul>
<h3 id="多通路特征融合的方法">多通路特征融合的方法</h3>
<ul>
<li>
<p>利用多尺度特征融合进行视网膜分割</p>
<p><img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/%E5%A4%9A%E7%89%B9%E5%BE%81%E8%9E%8D%E5%90%88.jpg" alt="多特征融合"></p>
<p><em>“Development of Automatic Retinal Vessel Segmentation Method in Fundus Images via Convolutional Neural Networks”</em></p>
</li>
</ul>
<h3 id="多尺度输入融合的方法">多尺度输入融合的方法</h3>
<ul>
<li>
<p>利用多尺度输入进行视网膜目标检测</p>
<p><img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/%E5%A4%9A%E5%B0%BA%E5%BA%A6%E8%BE%93%E5%85%A5%E7%9A%84Unet.jpg" alt="多尺度输入"></p>
<p><em>“Joint Optic Disc and Cup Segmentation Based onMulti-label Deep Network and Polar Transformation”</em></p>
</li>
</ul>
<h3 id="结合CRF后处理的方法">结合CRF后处理的方法</h3>
<ul>
<li>
<p>结合条件随机场后处理的方法进行血管分割</p>
<p><img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/%E7%BB%93%E5%90%88CRF%E7%9A%84%E6%96%B9%E6%B3%95.jpg" alt="结合CRF后处理的方法"></p>
<p><em>“DeepVessel: Retinal Vessel Segmentation via Deep Learning and Conditional Random Field”</em></p>
</li>
</ul>
<h3 id="我提出的方法">我提出的方法</h3>
<ul>
<li>
<p>基于Unet的改进：多尺度卷积核+多尺度特征输入</p>
<p>示例图如下：</p>
<p><img src="https://raw.githubusercontent.com/cherryzzangg/cherryzzangg.github.io/master/images/network2.jpg" alt="基于改进的Unet血管分割"></p>
</li>
<li>
<p>阅读并对程序做了一些修改</p>
<ul>
<li>
<p>将训练和测试数据转化为Hdf5格式：prepare_data_drive.py</p>
</li>
<li>
<p>图像的预处理：灰度化、归一化、自适应直方图均衡化（CLAHE）、gamma亮度调整</p>
</li>
<li>
<p>训练数据，随机选定像素中心分割成小块（32*32），做为训练输入数据</p>
<p>测试数据，为了能够恢复结果，按顺序依次分割成小块，每块分割好后再拼接</p>
</li>
<li>
<p>训练和测试过程代码还在修改中，是否添加CRF做为后处理？能够对优化函数进行改进？</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>论文整理</category>
      </categories>
      <tags>
        <tag>血管分割</tag>
        <tag>图像分割</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搜索引擎收录</title>
    <url>/2017/08/17/Hexo%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/</url>
    <content><![CDATA[<img src="/images/博客背景1.jpg" width="75%" height="75%">
<h2 id="前言">前言</h2>
<blockquote>
<p>本文主要介绍如何让hexo博客被百度、谷歌搜索引擎收录，提高文章访问量。</p>
</blockquote>
<h2 id="1-确认博客是否被收录">1. 确认博客是否被收录</h2>
<p>在百度或者谷歌上面输入下面格式来判断，如果能搜索到就说明被收录，否则就没有。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site: cherryzzangg.site</span><br></pre></td></tr></table></figure>
<h2 id="2-创建站点地图文件">2. 创建站点地图文件</h2>
<p>打开你的hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的插件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在博客目录的<code>_config.yml</code>中添加如下代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure>
<p>之后生成文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p>在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了。</p>
<p>在站点<code>_config.yml</code>中修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url: http:&#x2F;&#x2F;www.cherryzzangg.me</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h2 id="3-部署Hexo博客到Coding">3. 部署Hexo博客到Coding</h2>
<p>GitHub封锁了百度spider，所以我们可以通过将博客搭建在国内的Coding上，然后通过域名分流解析，国内用户访问解析到Coding上，海外用户访问解析到GitHub。<br>
更新：目前，coding已经与腾讯云开发者平台合并。</p>
<h3 id="3-1-注册coding账号">3.1 注册coding账号</h3>
<h3 id="3-2-创建项目">3.2 创建项目</h3>
<p>名称：<a href="http://cherryzzang.coding.me" target="_blank" rel="noopener">cherryzzang.coding.me</a></p>
<h3 id="3-3-配置SSH公钥">3.3 配置SSH公钥</h3>
<p>将id_rsa.pub中的内容复制到coding的公钥中。</p>
<p>测试SSH Key 是否配置成功：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure>
<h3 id="3-4-配置文件">3.4 配置文件</h3>
<p>修改Hexo博客目录下的站点配置文件<code>_config.yml</code>中的部署配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: </span><br><span class="line">    github: git@github.com:cherryzzangg/cherryzzangg.github.io.git,master</span><br><span class="line">    coding: git@git.coding.net:cherryzzangg/cherryzzangg.coding.me.git,master</span><br></pre></td></tr></table></figure>
<p>重新执行部署，代码就同步到coding上面了。</p>
<h3 id="3-5-开启Coding项目的Pages服务">3.5 开启Coding项目的Pages服务</h3>
<p>部署分支选择master，Pages服务开启成功，可以直接通过Coding给你分配的域名访问博客了。</p>
<h3 id="3-6-添加域名">3.6 添加域名</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@       CNAME  国外  cherryzzangg.github.io.</span><br><span class="line">www     CNAME  国外  cherryzzangg.github.io.</span><br><span class="line">@       CNAME  默认  cherryzzangg.coding.me.</span><br><span class="line">www     CNAME  默认  cherryzzangg.coding.me.</span><br></pre></td></tr></table></figure>
<h3 id="3-7-Coding项目绑定自定义域名">3.7 Coding项目绑定自定义域名</h3>
<p>配置完域名分流解析后，返回Coding项目的Pages服务页面绑定自定义域名（有www和无www的）。</p>
<h2 id="4-收录到百度">4. 收录到百度</h2>
<h3 id="4-1-百度站长平台验证网站">4.1 百度站长平台验证网站</h3>
<p><a href="https://ziyuan.baidu.com/linksubmit/" target="_blank" rel="noopener">百度站点提交入口</a></p>
<ul>
<li>
<p><strong>CNAME验证的方式</strong></p>
<p>在dnspod添加记录如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(生成的验证码)    CNAME  默认  zz.baidu.com</span><br></pre></td></tr></table></figure>
<p>完成验证，成功！</p>
</li>
<li>
<p><strong>文件验证的方式</strong></p>
<p>下载验证文件到/source/文件夹下，为了防止hexo编译，修改该验证文件如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line">sKYi5KNtoy（验证码）</span><br></pre></td></tr></table></figure>
<p>部署到服务器，完成验证</p>
</li>
</ul>
<h3 id="4-2-链接提交">4.2 链接提交</h3>
<ul>
<li>
<p><strong>主动提交方式</strong></p>
<p>安装插件<code>npm install hexo-baidu-url-submit --save</code>。</p>
<p>配置<code>_config.yml</code>文件，在站点的配置文件中配置：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 3 ## 比如3，代表提交最新的三个链接</span><br><span class="line">  host: your web host ## 在百度站长平台中注册的域名</span><br><span class="line">  token: your_token ## 请注意这是您的秘钥，请不要发布在公众仓库里!</span><br><span class="line">  path: baidu_urls.txt ## 文本文档的地址，新链接会保存在此文本文档里</span><br></pre></td></tr></table></figure>
<p>加入新的部署</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> - type: git</span><br><span class="line">   repo:</span><br><span class="line"> - type: baidu_url_submitter</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>站点地图的方式</strong></p>
<p>提交baidusitemap.xml</p>
</li>
</ul>
<h2 id="5-Google验证网站">5. Google验证网站</h2>
<ul>
<li>
<p><strong>添加站点</strong></p>
</li>
<li>
<p><strong>使用谷歌统计账号验证成功</strong></p>
</li>
<li>
<p><strong>添加sitemap.xml即可抓取网页</strong></p>
</li>
</ul>
<p>参考：<br>
<a href="http://svend.cc/posts/44528/" target="_blank" rel="noopener">Hexo系列：（三）Hexo博客部署到GitHub和Coding</a><br>
<a href="http://svend.cc/posts/22980/" target="_blank" rel="noopener">Hexo系列：（四）Hexo博客提交百度和Google收录</a><br>
<a href="http://hunao.info/2016/06/01/Hexo-Seo%E4%BC%98%E5%8C%96%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%9C%A8google%E6%90%9C%E7%B4%A2%E6%8E%92%E5%90%8D%E7%AC%AC%E4%B8%80/" target="_blank" rel="noopener">Hexo Seo优化让你的博客在google搜索排名第一</a></p>
]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>序 / INTRO</title>
    <url>/2017/08/13/about/</url>
    <content><![CDATA[<center>终于等到你</center>
<center>欢迎来到我的博客</center>
<center>主要写一些技术类的文章</center>
<center>当然也会放上一些随笔杂想</center>
<center>记录生活的点滴</center>
<center>请多多指教啦~</center>
<img src="/images/比心.jpg">
<a id="more"></a>
<h2 id="关于我">关于我</h2>
<ul>
<li>
<p>有写作欲望的白日梦想家</p>
</li>
<li>
<p>蜗牛般爬代码的程序媛</p>
</li>
<li>
<p>别人眼中的玻璃心</p>
</li>
<li>
<p>情绪化的理想主义</p>
</li>
<li>
<p>沉浸在自我的乌托邦</p>
</li>
<li>
<p>渴望爱与自由的矛盾体</p>
</li>
</ul>
<hr>
<h2 id="关于这里">关于这里</h2>
<ul>
<li>
<p>有关生活的感悟</p>
</li>
<li>
<p>菜鸟的奋斗记</p>
</li>
<li>
<p>给未来的自己留下一点回忆</p>
</li>
<li>
<p>与世界沟通的媒介</p>
</li>
</ul>
<img src="/images/关于我.jpg">]]></content>
  </entry>
  <entry>
    <title>Caffe配置记录</title>
    <url>/2017/08/12/Caffe%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>安装caffe与配置环境详尽教程，针对我遇到的坑提供了一些解决办法。</p>
<p>这里涉及的环境配置为：ubuntu16.04，cuda8.0，cudnn5，opencv3.1。</p>
</blockquote>
<a id="more"></a>
<h2 id="1-安装依赖包">1. 安装依赖包</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install -y build-essential cmake git pkg-config </span><br><span class="line">sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler </span><br><span class="line">sudo apt-get install -y libatlas-base-dev </span><br><span class="line">sudo apt-get install -y --no-install-recommends </span><br><span class="line">sudo apt-get install -y libboost-all-dev </span><br><span class="line">sudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev </span><br><span class="line">sudo apt-get install -y python-pip </span><br><span class="line">sudo apt-get install -y python-dev </span><br><span class="line">sudo apt-get install -y python-numpy python-scipy</span><br></pre></td></tr></table></figure>
<h2 id="2-复制文件，修改配置文件">2. 复制文件，修改配置文件</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/BVLC/caffe</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> caffe</span><br><span class="line"></span><br><span class="line">caffe$ cp Makefile.config.example Makefile.config </span><br><span class="line"></span><br><span class="line">caffe$ gedit Makefile.config</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>如果采用CPU模式:</p>
<p><code># CPU_ONLY := 1</code> 取消注释 <code>CPU_ONLY := 1</code></p>
</li>
<li>
<p>使用GPU：</p>
<p><code>USE_CUDNN :=1</code></p>
</li>
<li>
<p>使用opencv3.0</p>
<p><code># OPENCV_VERSION := 3 </code>修改为：<code>OPENCV_VERSION := 3</code></p>
</li>
<li>
<p>若要使用python来编写layer，则需要</p>
<p><code># WITH_PYTHON_LAYER := 1</code>修改为<code>WITH_PYTHON_LAYER := 1</code></p>
</li>
<li>
<p>修改hdf5</p>
</li>
</ul>
<p>将</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Whatever else you find you need goes here.</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/<span class="built_in">local</span>/include</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/<span class="built_in">local</span>/lib /usr/lib</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS :=  $(PYTHON_INCLUDE) /usr/<span class="built_in">local</span>/include /usr/include/hdf5/serial</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/<span class="built_in">local</span>/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</span><br></pre></td></tr></table></figure>
<p>这是因为ubuntu16.04的文件包含位置发生了变化，尤其是需要用到的hdf5的位置，所以需要更改这一路径</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ find . -<span class="built_in">type</span> f -<span class="built_in">exec</span> sed -i -e <span class="string">'s^"hdf5.h"^"hdf5/serial/hdf5.h"^g'</span> -e <span class="string">'s^"hdf5_hl.h"^"hdf5/serial/hdf5_hl.h"^g'</span> <span class="string">'&#123;&#125;'</span> \;</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/lib/x86_64-linux-gnu</span><br><span class="line"></span><br><span class="line">~gnu$ sudo ln -s libhdf5_serial.so.10.1.0 libhdf5.so</span><br><span class="line"></span><br><span class="line">~gnu$ sudo ln -s libhdf5_serial_hl.so.10.0.2 libhdf5_hl.so</span><br></pre></td></tr></table></figure>
<ul>
<li>修改nvcc</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit Makefile</span><br></pre></td></tr></table></figure>
<p>将</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>
<ul>
<li>编辑</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /usr/<span class="built_in">local</span>/cuda/include/host_config.h</span><br></pre></td></tr></table></figure>
<ul>
<li>注释掉高版本gcc报错</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#error-- unsupported GNU version! gcc versions later than 4.9 are not supported!</span></span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">//<span class="comment">#error-- unsupported GNU version! gcc versions later than 4.9 are not supported!</span></span><br></pre></td></tr></table></figure>
<h2 id="3-编译caffe">3. 编译caffe</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ find . -<span class="built_in">type</span> f -<span class="built_in">exec</span> sed -i -e <span class="string">'s^"hdf5.h"^"hdf5/serial/hdf5.h"^g'</span> -e <span class="string">'s^"hdf5_hl.h"^"hdf5/serial/hdf5_hl.h"^g'</span> <span class="string">'&#123;&#125;'</span> \;</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> /usr/lib/x86_64-linux-gnu</span><br><span class="line"></span><br><span class="line">~gnu$ sudo ln -s libhdf5_serial.so.10.1.0 libhdf5.so</span><br><span class="line"></span><br><span class="line">~gnu$ sudo ln -s libhdf5_serial_hl.so.10.0.2 libhdf5_hl.so</span><br></pre></td></tr></table></figure>
<ul>
<li>编译开始：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">caffe$ sudo make all -j4</span><br><span class="line"></span><br><span class="line">caffe$ sudo make <span class="built_in">test</span> -j4</span><br><span class="line"></span><br><span class="line">caffe$ sudo make runtest -j4</span><br><span class="line"></span><br><span class="line">caffe$ sudo make distribute</span><br></pre></td></tr></table></figure>
<ul>
<li>生成数据：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ <span class="built_in">cd</span> data/mnist</span><br><span class="line"></span><br><span class="line">mnist$ sudo sh ./get_mnist.sh</span><br></pre></td></tr></table></figure>
<ul>
<li>处理成LDB：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">caffe$ sudo sh ./examples/mnist/create_mnist.sh</span><br></pre></td></tr></table></figure>
<p>注意要在原始caffe下进行</p>
<ul>
<li>训练开始</li>
</ul>
<p>如果CPU：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ <span class="built_in">cd</span> examples/mnist/</span><br><span class="line"></span><br><span class="line">mnist$ gedit lenet_solver.prototxt</span><br></pre></td></tr></table></figure>
<p>将文件最后的<code>solver_mode:GPU</code>改为<code>solver_mode: CPU</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">caffe$ sudo sh ./examples/mnist/train_lenet.sh</span><br></pre></td></tr></table></figure>
<ul>
<li>测试数据：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ <span class="built_in">cd</span> examples/mnist/</span><br><span class="line"></span><br><span class="line">mnist$ touch test_lenet.sh <span class="comment">#生成测试文件</span></span><br><span class="line"></span><br><span class="line">mnist$ gedit test_lenet.sh</span><br></pre></td></tr></table></figure>
<p>编辑的内容如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#！/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line">./build/tools/caffe <span class="built_in">test</span> --model=examples/mnist/lenet_train_test.prototxt --weights=examples/mnist/lenet_iter_10000.caffemodel -iterations 100</span><br></pre></td></tr></table></figure>
<p>注意一定是两行，注意后面-前面的空格</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ sudo sh ./examples/mnist/test_lenet.sh</span><br></pre></td></tr></table></figure>
<p>测试成功！</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">caffe$ sudo make pycaffe</span><br></pre></td></tr></table></figure>
<p>不要提前make!</p>
<h2 id="4-报错问题">4. 报错问题</h2>
<ul>
<li>如果出现错误：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python/caffe/_caffe.cpp:10:31: fatal error: numpy/arrayobject.h: 没有那个文件或目录</span><br></pre></td></tr></table></figure>
<p>可以：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-numpy</span><br></pre></td></tr></table></figure>
<p>成功！</p>
<ul>
<li>如果import caffe找不到module:</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>在最后面添加路径：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PYTHONPATH=/home/cherrie/caffe/python:<span class="variable">$PYTHONPATH</span></span><br></pre></td></tr></table></figure>
<p>对于anaconda:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">LD_LIBRARY_PATH=/home/cherrie/anaconda2/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>
<p>返回终端：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>
<p>使环境变量立即生效</p>
<ul>
<li>如果</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ImportError: No module named google.protobuf.internal</span><br></pre></td></tr></table></figure>
<p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install python-protobuf</span><br></pre></td></tr></table></figure>
<p>在python里面</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">&gt;&gt;&gt; sys.path.append(<span class="string">'/usr/lib/python2.7/dist-packages/'</span>)</span><br><span class="line">&gt;&gt;&gt; import caffe</span><br></pre></td></tr></table></figure>
<p>或者永久办法：</p>
<p>将<code>/usr/lib/python2.7/dist-packages</code>里面的google文件夹</p>
<p>复制到</p>
<p><code>/home/cherrie/anaconda2/lib/python2.7/site-packages</code>下</p>
<ul>
<li>import cv2找不到模块</li>
</ul>
<p>将<code>/usr/lib/python2.7/dist-packages</code>里面的<code>cv.py cv.pyc cv2.so</code></p>
<p>复制到</p>
<p><code>/home/cherrie/anaconda2/lib/python2.7/site-packages</code>下</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>caffe</tag>
        <tag>环境配置</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>cGAN条件生成对抗网络</title>
    <url>/2017/08/12/GAN/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>生成对抗网络是目前比较流行的深度学习网络结构，其包括生成模型和判别模型，在图像处理、自然语言处理等方面有显著的效果。</p>
</blockquote>
<h2 id="1-生成对抗网络（Generative-Adversarial-Networks）">1. 生成对抗网络（Generative Adversarial Networks）</h2>
<ul>
<li>
<p>提出：</p>
<p>GAN启发自博弈论中的零和博弈，由Goodfellow于2014年提出</p>
<p>Goodfellow, Ian, et al. Generative adversarial nets.NIPS,2014.</p>
</li>
<li>
<p>两部分：</p>
<p>生成模型（generative model G）：捕捉样本数据的分布</p>
<p>判别模型（discriminative model D）：一个二分类器，判别输入是真实数据还是生成的样本</p>
</li>
<li>
<p>“二元极小极大博弈（minimax two-player game）”问题：</p>
<p>训练时固定一方，更新另一个模型的参数，交替迭代，使得对方的错误最大化</p>
<p>最终G 能估测出样本数据的分布，D的概率趋近$\frac{1}{2}$，无法分辨真假</p>
<a id="more"></a>
<p>目标函数：</p>
<p>$$\min\limits_G\max\limits_DV(D,G)=E_{p_{data}(x)}[logD(x)]+E_{p_z(z)}[log(1-D(G(z)))]$$</p>
<p>G使G(Z)不断接近1，最小化log(1-D(G(Z)))，即最大化log(G(Z))，用来迷惑D的判断，D用来判定“赝品”，使其判断错误</p>
<p>D(x)代表D分辨出真实而不是生成的概率，D使log(D(x))最大化，逐渐收敛于：</p>
<p>$\frac{p_{data}(x)}{p_{data}(x)+p_g(x)}$，当$p_g(x)=p_{data}(x)​$，$D(x)=0.5​$</p>
<p><img src="/images/GAN%E6%A8%A1%E6%8B%9F.JPG" alt="GAN模拟"></p>
</li>
<li>
<p>算法流程</p>
<p>生成和判别模型交替进行优化</p>
<p><img src="/images/GAN%E7%AE%97%E6%B3%95%E6%B5%81%E7%A8%8B.JPG" alt="GAN算法流程"></p>
</li>
</ul>
<h2 id="2-cGAN（conditional-GAN）">2. cGAN（conditional GAN）</h2>
<p>Isola P, Zhu J Y, Zhou T, et al. Image-to-Image Translation with Conditional Adversarial Networks. 2016.</p>
<ul>
<li>基本概念</li>
</ul>
<p>图像处理问题可转化为：图片——图片</p>
<p>图片到图片的翻译（像素级）</p>
<p>计算机视觉：原始图片——边缘、分割、语义标签</p>
<p>计算机图形学：语义标签等——现实的图片</p>
<p>GAN学习适应数据的loss</p>
<ul>
<li>
<p>基本思想</p>
<p>$$G：{x,z}\rightarrow y$$</p>
<p>目标函数：$$L(G,D)=E_{p_{data}(x,y)}[logD(x,y)]+E_{p_{data}(x),p_z(z)}[log(1-D(x,G(x,z)))]$$</p>
<p>在判别系统中加入原始输入图片作为监督信息</p>
<p><img src="/images/cGAN%E7%A4%BA%E6%84%8F%E5%9B%BE.JPG" alt="cGAN示意图"></p>
<p>引入L1惩罚项：<br>
$L_{l1}(G)=E_{p_{data}(x,y),p_z(z)}[\Vert{y-G(x,z)}\Vert_1]$</p>
<p>最终的目标函数：<br>
$G^*=arg\min \limits_{G}\max\limits_{D}L_{cGAN}(G,D)+\lambda L_{l1}(G)$</p>
</li>
<li>
<p>网络结构</p>
<p><strong>生成模型：U-net</strong></p>
<p>传统编码—解码器：瓶颈区（图片与图片之间），输入和输出重叠的低层次信息冗余</p>
<p>U-net：跳跃连接的方式，连接i层与n-i层，共有n层</p>
<p><img src="/images/U-net.JPG" alt="U-net"></p>
<p>噪声采用dropout的方式</p>
<p>两个模型都用到：convolution-BatchNorm（块标准化）-ReLu</p>
<p><strong>判别模型：卷积PatchGAN分类器</strong></p>
<p>采用L1惩罚项可对低频部分有较好的修正作用</p>
<p>GAN鉴别器则主要负责高频部分</p>
<p>只针对Patch：N*N进行判定，通过卷积到全图像</p>
<p>优化方法：minibatch随机梯度下降法，改进方法Adam：2015.</p>
</li>
<li>
<p>实验方向</p>
<p>语义标签——照片：Cityscapes数据集<br>
建筑标签——照片：CMP Facades dataset<br>
地图——航拍照片：Google Maps<br>
边缘——照片<br>
素描图——照片<br>
夜景图——白天图<br>
BW——彩色图</p>
</li>
</ul>
]]></content>
      <categories>
        <category>论文整理</category>
      </categories>
      <tags>
        <tag>GAN</tag>
      </tags>
  </entry>
  <entry>
    <title>faster-rcnn 配置记录</title>
    <url>/2017/08/12/faster-rcnn%20%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>目标检测经典算法faster-rcnn在caffe框架上的实现，本文介绍了代码配置过程。</p>
</blockquote>
<a id="more"></a>
<h2 id="1-安装依赖包">1. 安装依赖包</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-opencv</span><br><span class="line"></span><br><span class="line">sudo apt-get install cython</span><br><span class="line"></span><br><span class="line">sudo pip install easydict</span><br></pre></td></tr></table></figure>
<h2 id="2-克隆文件">2. 克隆文件</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/rbgirshick/py-faster-rcnn.git</span><br></pre></td></tr></table></figure>
<h2 id="3-配置文件">3. 配置文件</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> py-faster-rcnn/lib</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> py-faster-rcnn/caffe-fast-rcnn </span><br><span class="line"></span><br><span class="line">cp Makefile.config.example Makefile.config  </span><br><span class="line"></span><br><span class="line">sudo gedit Makefile.config</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>如果采用CPU模式:</p>
<p><code># CPU_ONLY := 1</code> 取消注释 <code>CPU_ONLY := 1</code></p>
</li>
<li>
<p>使用GPU：</p>
<p><code>USE_CUDNN :=1</code></p>
</li>
<li>
<p>使用opencv3.0</p>
<p><code># OPENCV_VERSION := 3 </code>修改为：<code>OPENCV_VERSION := 3</code></p>
</li>
<li>
<p>若要使用python来编写layer，则需要</p>
<p><code># WITH_PYTHON_LAYER := 1</code>修改为<code>WITH_PYTHON_LAYER := 1</code></p>
</li>
<li>
<p>修改hdf5</p>
<p>将</p>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Whatever else you find you need goes here.</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/<span class="built_in">local</span>/include</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/<span class="built_in">local</span>/lib /usr/lib</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS :=  $(PYTHON_INCLUDE) /usr/<span class="built_in">local</span>/include /usr/include/hdf5/serial</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/<span class="built_in">local</span>/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</span><br></pre></td></tr></table></figure>
<ul>
<li>修改nvcc</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit Makefile</span><br></pre></td></tr></table></figure>
<p>将</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>
<h2 id="4-适配新版本的caffe">4. 适配新版本的caffe</h2>
<ul>
<li>
<p>复制caffe/include/caffe/layers/ cudnn开头的所有文件替换</p>
<p>py-faster-rcnn/caffe-fast-rcnn/include/caffe/layers 同名文件</p>
</li>
<li>
<p>复制caffe/src/caffe/layers/ cudnn开头的所有文件替换</p>
<p>py-faster-rcnn/caffe-fast-rcnn/src/caffe/layers同名文件</p>
</li>
<li>
<p>将caffe/include/caffe/util/  里面的cudnn.cpp 复制到</p>
<p>py-faster-rcnn/caffe-fast-rcnn/include/caffe/util 同名文件</p>
</li>
<li>
<p>import easydict 找不到模块</p>
<p>将/usr/local/lib/python2.7/dist-packages 里面的 easydict 和 easydict-1.6.egg-info 复制到</p>
<p>/home/cherrie/anaconda2/lib/python2.7/site-packages下</p>
</li>
</ul>
<h2 id="5-编译执行">5. 编译执行</h2>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> py-faster-rcnn/caffe-fast-rcnn</span><br><span class="line"></span><br><span class="line">sudo make -j8</span><br><span class="line"></span><br><span class="line">sudo make pycaffe</span><br></pre></td></tr></table></figure>
<h2 id="6-测试">6. 测试</h2>
<ul>
<li>下载文件</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> py-faster-rcnn/</span><br><span class="line"></span><br><span class="line">./data/scripts/fetch_faster_rcnn_models.sh</span><br></pre></td></tr></table></figure>
<ul>
<li>测试</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> py-faster-rcnn/</span><br><span class="line"></span><br><span class="line">python tools/demo.py</span><br></pre></td></tr></table></figure>
<h2 id="7-运行结果">7. 运行结果</h2>
<p><img src="/images/fasterrcnn%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.JPG" alt="fasterrcnn运行结果"></p>
<p><img src="/images/%E7%89%A9%E4%BD%93%E6%A3%80%E6%B5%8B%E7%BB%93%E6%9E%9C.JPG" alt="figure_10"></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>caffe</tag>
        <tag>物体检测</tag>
      </tags>
  </entry>
  <entry>
    <title>显卡驱动及GPU环境配置</title>
    <url>/2017/08/12/%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E5%8F%8AGPU%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>caffe安装时，对GPU环境的搭建和配置。</p>
<p>本文环境为：ubuntu16.04，cuda8.0，cudnn5,opencv3.1。</p>
</blockquote>
<h2 id="安装驱动">安装驱动</h2>
<ul>
<li>ctrl+alt+f4，进入tty界面，关闭图形</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo service lightdm stop</span></span><br></pre></td></tr></table></figure>
<ul>
<li>添加驱动源：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nvidia-367</span><br><span class="line">sudo apt-get install nvidia-settings</span><br><span class="line">sudo apt-get install nvidia-prime</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>
<ul>
<li>添加显卡切换器(可选)：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:nilarimogard/webupd8</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install prime-indicator</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="cuda8-0安装">cuda8.0安装</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service lightdm stop</span><br><span class="line">sudo sh cuda_8.0.44_linux.run</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=/usr/local/cuda-8.0/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source .bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/profile</span><br></pre></td></tr></table></figure>
<p>添加如下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=/usr/local/cuda/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>创建新文档</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/ld.so.conf.d/cuda.conf</span><br></pre></td></tr></table></figure>
<p>填写</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/cuda/lib64</span><br></pre></td></tr></table></figure>
<p>使命令生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/cuda-8.0/samples/1_Utilities/deviceQuery</span><br><span class="line"></span><br><span class="line">sudo make</span><br><span class="line"></span><br><span class="line">sudo ./deviceQuery</span><br></pre></td></tr></table></figure>
<p>查看显卡信息</p>
<h2 id="cudnn安装">cudnn安装</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/cuda/include/</span><br><span class="line">sudo cp cudnn.h /usr/local/cuda/include/</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/cuda/lib64/</span><br><span class="line">sudo cp lib* /usr/local/cuda/lib64/</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/cuda/lib64/</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -rf libcudnn.so libcudnn.so.5 </span><br><span class="line">sudo ln -s libcudnn.so.5.0.5 libcudnn.so.5</span><br><span class="line">sudo ln -s libcudnn.so.5 libcudnn.so</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure>
<h2 id="opencv-3-1安装">opencv-3.1安装</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install --assume-yes libopencv-dev build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential cmake git</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ffmpeg libopencv-dev libgtk-3-dev python-numpy python3-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libv4l-dev libtbb-dev qtbase5-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd opencv-3.1.0/</span><br><span class="line">mkdir build </span><br><span class="line">cd build/</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -DCUDA_NVCC_FLAGS="-D_FORCE_INLINES" ..</span><br></pre></td></tr></table></figure>
<p>ps:版本不支持高版本cuda</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/cherrie/opencv-3.1.0/modules/cudalegacy/src/</span><br><span class="line">sudo gedit graphcuts.cpp</span><br></pre></td></tr></table></figure>
<p>把</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> !defined (HAVE_CUDA) || defined (CUDA_DISABLER)</span></span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> !defined (HAVE_CUDA) || defined (CUDA_DISABLER) || (CUDART_VERSION &gt;= 8000)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd opencv-3.1.0/</span><br><span class="line">cd build/</span><br><span class="line">sudo make -j8</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br><span class="line">sudo /bin/bash -c 'echo "/usr/local/lib" &gt; /etc/ld.so.conf.d/opencv.conf'</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<h2 id="anaconda安装">anaconda安装</h2>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
        <tag>cuda</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo个人博客搭建教程</title>
    <url>/2017/08/12/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<img src="/images/博客背景2.jpg" width="85%" height="85%">
<h2 id="前言">前言</h2>
<blockquote>
<p>本文主要介绍一些hexo博客搭建的具体过程，包括自定义样式的修改，自定义域名解析等。欢迎互相交流。</p>
</blockquote>
<a id="more"></a>
<div class="note info"><p>更新：本地git环境搭建博客存在无法云储存的局限性，如果我重装系统就gg了，又懒得每次备份......推荐大家使用coding.net上面的WEBIDE（现已升级为cloud studio），免费提供搭建博客用的服务器，十分方便，随时修改你的博客文件，而且还可以直接部署在coding静态页面上。</p></div>
<h2 id="1-依赖环境设置（本地环境）">1. 依赖环境设置（本地环境）</h2>
<ul>
<li>搭建node.js环境：下载软件，连接地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li>
<li>搭建git环境：下载git bash for Windows软件，链接地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></li>
</ul>
<h2 id="2-Github注册和配置">2. Github注册和配置</h2>
<ul>
<li>建立仓库</li>
</ul>
<h2 id="3-安装配置hexo">3. 安装配置hexo</h2>
<ul>
<li>
<p><strong>使用npm安装hexo</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>初始化</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init /d/blog</span><br><span class="line"><span class="built_in">cd</span> /d/blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-关联-Hexo-与-GitHub-Pages">4. 关联 Hexo 与 GitHub Pages</h2>
<ul>
<li>
<p><strong>生成SSH keys</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"cherryzzangg@163.com"</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>添加 SSH Key 到 GitHub</strong></p>
</li>
</ul>
<p>打开位于（C:\Users\cherry\ .ssh）的文件id_rsa.pub，复制其中的内容到github的SSH key。</p>
<ul>
<li>
<p><strong>测试</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">git config --global user.name <span class="string">"cherryzzangg"</span></span><br><span class="line">git config --global user.email <span class="string">"cherryzzangg@163.com"</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>配置 Deployment</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure>
<p>在<code>_config.yml</code>文件中，找到<code>Deployment</code>，然后按照如下修改，用户名改成你的：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:cherryzzangg/cherryzzangg.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
</ul>
<div class="note info"><p>更新：在WEBIDE环境，我们想要远程部署到github上面同步，由于是Linux系统，我们怎么复制SSH Key呢？</p></div>
<ul>
<li>
<p><strong>WEBIDE部署到github</strong></p>
<p>实现将SSH Key显示出来，然后可以直接复制出来</p>
<figure class="highlight sh"><figcaption><span>file:/home/coding/.ssh/</span></figcaption><table><tr><td class="code"><pre><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-更换主题nexT">5. 更换主题nexT</h2>
<p>主题首页：<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p>
<p>官方主题库：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p>
<div class="note info"><p>更新 2018.12：主题Next已经更新到version6，最新的地址为：https://github.com/theme-next/hexo-theme-next。 本博客更新部分：新的版本支持代码区块复制按钮；添加文章底部评分；博客评论系统改为Valine，文章可显示评论数；busuanzi网址更改，采用新版本的字数统计插件。</p></div>
<ul>
<li>
<p><strong>安装next主题</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>在博客根目录的<code>_config.yml</code>文件中，找到<code>theme</code>并改为next</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d/blog/themes/next</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure>
<p>按照主题设置文档进行自定义修改</p>
<p>注意：i —— 编辑模式；esc —— 命令模式；编辑之后，退回命令模式，执行<code>:wq</code> 退出并保存文件</p>
</li>
</ul>
<h2 id="6-自动备份Hexo博客源文件（不使用）"><s>6. 自动备份Hexo博客源文件</s>（不使用）</h2>
<div class="note info"><p>更新：WEBIDE环境已经可以将运行代码上传到仓库中，因此博主不在用下面的同步方法，感兴趣的朋友也可以尝试。</p></div>
<ul>
<li>
<p><strong>在Github下创建一个新的repository，取名为blog</strong></p>
</li>
<li>
<p><strong>进入博客目录初始化</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>删除根目录下的<code>.deploy_git</code>，删除themes/next文件夹中的<code>.git</code> <code>.github</code> ，添加所有文件</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">"first commit"</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>设置远程仓库地址，并更新</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote rm origin  <span class="comment">#删除旧的remote#</span></span><br><span class="line">git remote add origin git@github.com:cherryzzangg/blog.git</span><br><span class="line">git push origin master <span class="comment">#上传到github#</span></span><br><span class="line">git pull origin master <span class="comment">#同步到本地#</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>安装<code>shelljs</code>模块</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install --save shelljs</span><br></pre></td></tr></table></figure>
<p>待到模块安装完成，在<code>blog</code>根目录的<code>scripts</code>文件夹（如果没有就新建一个）下新建一个js文件，文件名随意取。</p>
<p>然后在脚本中，写入以下内容：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'shelljs/global'</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">hexo.on(<span class="string">'deployAfter'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="comment">//当deploy完成后执行备份</span></span><br><span class="line">	run();</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"产生了一个错误&lt;(￣3￣)&gt; !，错误详情为："</span> + e.toString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!which(<span class="string">'git'</span>)) &#123;</span><br><span class="line">	echo(<span class="string">'Sorry, this script requires git'</span>);</span><br><span class="line">	exit(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	echo(<span class="string">"======================Auto Backup Begin==========================="</span>);</span><br><span class="line">	cd(<span class="string">'D:/blog'</span>);    <span class="comment">//此处修改为Hexo根目录路径</span></span><br><span class="line">	<span class="keyword">if</span> (exec(<span class="string">'git add --all'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">		echo(<span class="string">'Error: Git add failed'</span>);</span><br><span class="line">		exit(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (exec(<span class="string">'git commit -am "Form auto backup script\'s commit"'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">		echo(<span class="string">'Error: Git commit failed'</span>);</span><br><span class="line">		exit(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (exec(<span class="string">'git push origin master'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">		echo(<span class="string">'Error: Git push failed'</span>);</span><br><span class="line">		exit(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	echo(<span class="string">"==================Auto Backup Complete============================"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在17行修改为自己的博客路径，如果你的Git远程仓库名称不为origin的话，还需要修改第28行执行的push命令，修改成自己的远程仓库名和相应的分支名。</p>
<p>修改<code>.gitignore</code>文件，删除<code>node_modules/</code>（可以不删除，则不同步该文件夹）,添加忽略项<code>.deploy_git</code>。</p>
<p>保存脚本并退出，然后执行<code>hexo clean</code> <code>hexo g</code> <code>hexo d</code></p>
<p>将会得到类似以下结果：</p>
<p><img src="/images/heto%E5%90%8C%E6%AD%A5.JPG" alt="hexo同步"></p>
<p>每次更新博文并<code>deploy</code>到服务器上之后，备份就自动启动并完成备份啦~是不是很方便呢？</p>
</li>
</ul>
<h2 id="7-个性化定制">7. 个性化定制</h2>
<p>参考文章：hexo的next主题个性化教程:打造炫酷网站<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h3 id="7-1-修改配置文件">7.1 修改配置文件</h3>
<h4 id="更新">更新</h4>
<ul>
<li>2019.01：新版本Next version6中，站点配置文件中简体中文的名称变为 zh-CN ，因此在博客配置文件<code>_config.yml</code>里需要将原有的：<code>language: zh-Hans</code>改为<code>language: zh-CN</code>。</li>
<li>busuanzi域名已经迁移，version6的Next已经更新</li>
<li>2019.01：由于新版本修复了计数安全问题，更新后会出现页面阅读次数显示错误，懒一点的解决办法，关闭leancloud安全选项。</li>
</ul>
<figure class="highlight sh"><figcaption><span>file:/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  security: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="7-1-1-取消目录自动编号功能">7.1.1 取消目录自动编号功能</h4>
<p>修改主题配置文件：</p>
<figure class="highlight sh"><figcaption><span>file:/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">number: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="7-1-2-在Hexo中渲染MathJax数学公式">7.1.2 在Hexo中渲染MathJax数学公式</h4>
<p>参考文章：在Hexo中渲染MathJax数学公式<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<span class="label info">更新：由于Hexo版本更新，直接在Next主题中Mathjax设置即可</span>
<figure class="highlight sh"><figcaption><span>file:/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Equations Render Support</span></span><br><span class="line">math:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  per_page: <span class="literal">true</span></span><br><span class="line">  engine: mathjax</span><br><span class="line">  <span class="comment"># hexo-rendering-pandoc (or hexo-renderer-kramed) needed to full MathJax support.</span></span><br><span class="line">  mathjax:</span><br><span class="line">    <span class="comment"># Use 2.7.1 as default, jsdelivr as default CDN, works everywhere even in China</span></span><br><span class="line">    cdn: //cdn.jsdelivr.net/npm/mathjax@2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure>
<h4 id="7-1-3-添加fancybox功能">7.1.3 添加fancybox功能</h4>
<ul>
<li>fancybox能够实现图片点击放大，首先修改主题配置文件</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fancybox. There is support for old version 2 and new version 3.</span></span><br><span class="line"><span class="comment"># Please, choose only any one variant, do not need to install both.</span></span><br><span class="line"><span class="comment"># For install 2.x: https://github.com/theme-next/theme-next-fancybox</span></span><br><span class="line"><span class="comment"># For install 3.x: https://github.com/theme-next/theme-next-fancybox3</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<ul>
<li>安装，参考官网教程（以version3为例）</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-fancybox3 <span class="built_in">source</span>/lib/fancybox</span><br><span class="line">$ <span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/lib/fancybox</span><br><span class="line">$ git pull <span class="comment">#更新</span></span><br></pre></td></tr></table></figure>
<h3 id="7-2-busuanzi统计——修改页脚来访人数样式">7.2 busuanzi统计——修改页脚来访人数样式</h3>
<p>修改配置文件<code>themes\next\layout\_third-party\analytics\busuanzi-counter.swig</code></p>
<p>修改部分如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.busuanzi_count.total_visitors %&#125;</span><br><span class="line">  &lt;span class=<span class="string">"site-uv"</span> title=<span class="string">"&#123;&#123; __('footer.total_visitors') &#125;&#125;"</span>&gt;</span><br><span class="line">    &lt;i class=<span class="string">"fa fa-&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;"</span>&gt;&lt;/i&gt;</span><br><span class="line">    你是来访的第&lt;span class=<span class="string">"busuanzi-value"</span> id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;位小可爱</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-3-更改博客背景图、添加阴影效果等CSS样式">7.3 更改博客背景图、添加阴影效果等CSS样式</h3>
<p>参考的文章：</p>
<ul>
<li>
<p>2017年最新基于hexo搭建个人免费博客——自定义页面样式一<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</li>
<li>
<p>打造个性超赞博客Hexo+NexT+GithubPages的超深度优化（墙裂推荐阅读）<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</li>
</ul>
<p>主要修改文件 <code>~/themes/next/source/css/_custom/custom.styl</code></p>
<h3 id="7-4-添加阅读人数">7.4 添加阅读人数</h3>
<p>参考文章：为NexT主题添加文章阅读量统计功能<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<h3 id="7-5-设置favicon网站缩略图">7.5 设置favicon网站缩略图</h3>
<p>将favicon.ico图标（32*32）放到路径（~/themes/next/source）里面</p>
<h3 id="7-6-将某一分类添加为新的菜单页面">7.6 将某一分类添加为新的菜单页面</h3>
<ul>
<li>
<p><strong>首先创建对应的页面</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">"essays"</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>修改主题的<code>_config.yml</code>,在目录下修改</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line"> home: <span class="regexp">/</span></span><br><span class="line"><span class="regexp"> categories: /</span>categories</span><br><span class="line"> about: <span class="regexp">/about</span></span><br><span class="line"><span class="regexp"> archives: /</span>archives</span><br><span class="line"> tags: <span class="regexp">/tags</span></span><br><span class="line"> essays: /categories/随笔 #添加的页面</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>修改菜单页的图标，图标命名格式为key-value，key是上面对应的菜单项，value值是<a href="http://www.bootcss.com/p/font-awesome/#icons-web-app" target="_blank" rel="noopener">FontAwesome icon</a>网站的图标名字。我的图标设置如下：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  nable: <span class="literal">true</span></span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  schedule: calendar</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  sitemap: sitemap</span><br><span class="line">  commonweal: heartbeat</span><br><span class="line">  essays: book</span><br><span class="line">  project: star</span><br><span class="line">  photos: camera</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>修改语言设置文件<code>zh-Hans.yml</code></strong></p>
<figure class="highlight"><figcaption><span>file:~/theme/next/languages/zh-Hans.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  essays: 随笔 #添加自定义的名称</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-7-文章简单加密访问">7.7 文章简单加密访问</h3>
<ul>
<li>
<p><strong>在所有的<meta>标签之后添加如下代码段：</strong></p>
<figure class="highlight javascript"><figcaption><span>file:~/themes/next/layout/_partials/head.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">              alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">              history.back();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>在需要加密的文章开头中加入密码段：</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">description: 文章访问需要密码</span><br><span class="line">password: password</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-8-文章置顶">7.8 文章置顶</h3>
<ul>
<li>
<p><strong>删除旧插件并安装新的插件</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>**在需要置顶的文章的Front-matter中加上<code>top: true</code>即可。**比如:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo个人博客搭建教程</span><br><span class="line">date: </span><br><span class="line">categories: </span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>如果想要设定文章顺序就编辑top的值，数字越大越靠前。</p>
</li>
</ul>
<h3 id="7-9-PDF文件内嵌展示">7.9 PDF文件内嵌展示</h3>
<ul>
<li>
<p><strong>安装pdf插件</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>在博客根目录source下添加文件夹documents，插入pdf</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% pdf /documents/项目申请书.pdf %&#125;</span><br></pre></td></tr></table></figure>
<p>以链接形式嵌入：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">项目的文件下载链接： [<span class="string">项目申请书</span>](<span class="link">/documents/项目申请书.pdf</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-10-自定义关于页面">7.10 自定义关于页面</h3>
<p>见CSS样式自定义中修改代码链接，我们事先已经将about页面的样式设置好了。接下来，如何引用CSS样式呢？引用位置在font设置下面。如果其他页面也想采用同样的样式，同样使用如下引用方式即可。</p>
<figure class="highlight markdown"><figcaption><span>file:~/source/about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"about-page"</span>&gt;</span></span></span><br><span class="line">编辑的内容</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<div class="note warning"><p>注意：我们在编辑内容时候，所有原来的markdown的语法都失效了，所以这里要学习一些html的语法啦！</p></div>
<ul>
<li>
<p><strong>分隔线和空行</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 分隔线 *&#x2F;</span><br><span class="line">&lt;hr &#x2F;&gt;</span><br><span class="line">&#x2F;* 空行 *&#x2F;</span><br><span class="line">&lt;br &#x2F;&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>引用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;blockquote&gt;引用内容&lt;&#x2F;blockquote&gt;</span><br><span class="line">&#x2F;* 如果前后间隙很小，可以像下面这样写 *&#x2F;</span><br><span class="line">&lt;p&gt;&lt;blockquote&gt;引用内容&lt;&#x2F;blockquote&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>居中和右对齐</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 居中 *&#x2F;</span><br><span class="line">&lt;center&gt;内容&lt;&#x2F;center&gt;</span><br><span class="line">&#x2F;* 右对齐 *&#x2F;</span><br><span class="line">&lt;div style&#x3D;&quot;text-align:right&quot;&gt;内容&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>字体大小和颜色</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font color&#x3D;&quot;#xxxxxx&quot; size&#x3D;&quot;number&quot;&gt;内容&lt;&#x2F;font&gt;</span><br><span class="line">&#x2F;* 详细请查看 http:&#x2F;&#x2F;www.w3school.com.cn&#x2F;tags&#x2F;tag_font.asp *&#x2F;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>Todo list</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;i class&#x3D;&quot;fa fa-check-square&quot;&gt;&lt;&#x2F;i&gt;已完成&lt;&#x2F;li&gt;</span><br><span class="line">&lt;li&gt;&lt;i class&#x3D;&quot;fa fa-square&quot;&gt;&lt;&#x2F;i&gt; 未完成&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>文本居中引用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<p>显示效果如下:</p>
<blockquote class="blockquote-center">
            <p>内容</p>

          </blockquote>
</li>
</ul>
<h3 id="7-11-Markdown设置参考链接脚注">7.11 Markdown设置参考链接脚注</h3>
<ul>
<li><strong>卸载Hexo默认自带的Markdown渲染器</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>安装插件hexo-renderer-markdown-it</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>高级配置</strong><br>
修改Hexo配置文件<code>_config.yml</code>，添加如下代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Markdown-it config</span><br><span class="line">markdown:</span><br><span class="line">  render:</span><br><span class="line">    html: true</span><br><span class="line">    xhtmlOut: false</span><br><span class="line">    breaks: true</span><br><span class="line">    linkify: true</span><br><span class="line">    typographer: true</span><br><span class="line">    quotes: &#39;“”‘’&#39;</span><br><span class="line">  plugins:</span><br><span class="line">    - markdown-it-abbr</span><br><span class="line">    - markdown-it-footnote</span><br><span class="line">    - markdown-it-ins</span><br><span class="line">    - markdown-it-sub</span><br><span class="line">    - markdown-it-sup</span><br><span class="line">  anchors:</span><br><span class="line">    level: 2</span><br><span class="line">    collisionSuffix: &#39;v&#39;</span><br><span class="line">    permalink: true</span><br><span class="line">    permalinkClass: header-anchor</span><br><span class="line">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>脚注引用语法</strong></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个链接到百度 [^脚注1]</span><br><span class="line">[<span class="symbol">^脚注1</span>]:<span class="link">https://www.baidu.com/</span></span><br></pre></td></tr></table></figure>
<p>参考文章：</p>
<ul>
<li>
<p>hexo-renderer-markdown-it 插件详解<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
</li>
<li>
<p>官方Github网址<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></p>
</li>
</ul>
<h3 id="7-12-自定义标签云颜色">7.12 自定义标签云颜色</h3>
<p>默认的标签云页面可能看起来很丑，怎么更改？</p>
<p>修改文件中对应的颜色：</p>
<figure class="highlight javascript"><figcaption><span>file：~/blog/themes/next/layout/page.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;&#123; tagcloud(&#123;<span class="attr">min_font</span>: <span class="number">12</span>, <span class="attr">max_font</span>: <span class="number">30</span>, <span class="attr">amount</span>: <span class="number">300</span>, <span class="attr">color</span>: <span class="literal">true</span>,  <span class="attr">start_color</span>: <span class="string">'#607d8b'</span>, <span class="attr">end_color</span>: <span class="string">'#a166ab'</span>&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-13-自定义域名解析">7.13 自定义域名解析</h3>
<ul>
<li>
<p><strong>注册域名</strong></p>
<p>在github账号里面添加一个edu教育邮箱（edu注册的可省略）。打开<a href="https://education.github.com/" target="_blank" rel="noopener">github education</a>网站，点击申请账号，填写个人信息，使用教育邮箱地址。注册成功后，邮箱会收到邮件。返回<a href="https://education.github.com/" target="_blank" rel="noopener">github education</a>首页，点击get the pack，进入可查看优惠包。在namecheap一栏中，点击链接用github账号登陆，进入<a href="https://nc.me" target="_blank" rel="noopener">namecheap</a>注册一个.me域名，加入购买，学生一年是免费的，购买时我使用的是github的注册163邮箱，填写国内edu邮箱可能不通过。然后提示注册namecheap账号，注册后即可使用并管理该域名。</p>
</li>
<li>
<p><strong>添加CNAME文件</strong></p>
<p>在博客/source/里面新建文件CNAME，内容就是域名：<a href="http://cherryzzangg.me" target="_blank" rel="noopener">cherryzzangg.me</a>，再部署到服务器上。</p>
</li>
<li>
<p><strong>域名解析</strong></p>
<p>注册<a href="https://www.dnspod.cn/" target="_blank" rel="noopener">dnspod</a>账号。我们在要把域名解析服务,设置到dnspod。</p>
<p>登录namecheap的域名管理后台，domain list设置nameservers，选择custom dns，填写如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f1g1ns1.dnspod.net</span><br><span class="line">f1g1ns2.dnspod.net</span><br></pre></td></tr></table></figure>
<p>登陆dnspod进入域名解析，添加域名，进入管理，添加记录如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@       CNAME  默认  cherryzzangg.github.io.</span><br><span class="line">www     CNAME  默认  cherryzzangg.github.io.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="http://www.jianshu.com/p/7ab21c7f0674" target="_blank" rel="noopener">http://www.jianshu.com/p/7ab21c7f0674</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="http://www.cduyzh.com/hexo-settings-3/" target="_blank" rel="noopener">2017年最新基于hexo搭建个人免费博客——自定义页面样式一</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化（墙裂推荐阅读）</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">为NexT主题添加文章阅读量统计功能</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://www.jianshu.com/p/588ab3d22eb8" target="_blank" rel="noopener">简书：hexo-renderer-markdown-it 插件详解</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">https://github.com/hexojs/hexo-renderer-markdown-it</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
